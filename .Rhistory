summary(osi)
osi = sqlQuery(con, "select
start_date
,date_type
,qry_type
,county_cd
,sum(cnt_referrals) cnt_referrals
,sum(prior_order_cnt_households) prior_order_cnt_households
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior') nth_order
from CA_ODS.prtl.rate_referrals_order_specific
where county_cd = 0
group by
start_date
,date_type
,qry_type
,county_cd
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior')
order by
start_date, county_cd, nth_order ")
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")))
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households)
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm")
osi = sqlQuery(con, "select
start_date
,date_type
,qry_type
,county_cd
,sum(cnt_referrals) cnt_referrals
,sum(prior_order_cnt_households) prior_order_cnt_households
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior') nth_order
from CA_ODS.prtl.rate_referrals_order_specific
where county_cd = 0
and start_date > '2009-02-01'
group by
start_date
,date_type
,qry_type
,county_cd
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior')
order by
start_date, county_cd, nth_order ")
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households)
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm") +
scale_color_manual(values = poc_colors[1:3], name = "Number of Prior Referrals") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm") +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households * 1000)
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)")
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "bottom",
legend.direction = "vertical",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "right",
legend.direction = "vertical",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggsave("Graph2.pdf", plot = osi.plot,  width = 6, height = 3.5)
osi.plot = ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point() +
geom_smooth(method = "lm", fill = NA) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "right",
legend.direction = "vertical",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggsave("Graph2.pdf", plot = osi.plot,  width = 6, height = 3.5)
osi.plot = ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point(size = data.point.size) +
geom_smooth(method = "lm", fill = NA, size = data.line.size) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "right",
legend.direction = "vertical",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggsave("Graph-2.pdf", plot = osi.plot,  width = 6, height = 3.5)
data.line.size = 1
osi.plot = ggplot(osi, aes(x = start_date, y = rate, color = prior)) +
geom_point(size = data.point.size) +
geom_smooth(method = "lm", fill = NA, size = data.line.size) +
scale_color_manual(values = poc_colors[1:4], name = "Number of Prior Referrals") +
labs(x = "", y = "Referral Rate (per 1,000)") +
theme_bw(base_size = base.size) +
theme(legend.position = "right",
legend.direction = "vertical",
panel.grid.minor = element_blank(),
strip.background = element_blank(),
axis.title = element_text(size = rel(0.8)))
ggsave("Graph-2.pdf", plot = osi.plot,  width = 6, height = 3.5)
head(osi)
source('C:/Users/gregorp.NEBULA2/Desktop/GitHub/annual_report/spark helper.R')
source('C:/Users/gregorp.NEBULA2/Desktop/GitHub/annual_report/spark helper.R')
spark(osi[, c("start_date", "rate")])
spark(osi[osi$nth_order = "More than 3 Prior", c("start_date", "rate")])
spark(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
threeplus = spark(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
ggsave("spark-table2-row4.pdf", threeplus, width = 3, height = 1)
pdfs <- list.files(pattern = "\\.pdf")
lapply(pdfs, embedFonts)
sparktable(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
osi = sqlQuery(con, "select
start_date
,date_type
,qry_type
,county_cd
,sum(cnt_referrals) cnt_referrals
,sum(prior_order_cnt_households) prior_order_cnt_households
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior') nth_order
from CA_ODS.prtl.rate_referrals_order_specific
where county_cd = 0
and start_date >= '2009-01-01'
group by
start_date
,date_type
,qry_type
,county_cd
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior')
order by
start_date, county_cd, nth_order ")
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households * 1000)
threeplus = spark(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
ggsave("spark-table2-row4.pdf", threeplus, width = 3, height = 1)
embedFonts("spark-table2-row4.pdf")
sparktable(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
threeplus
osi = sqlQuery(con, "select
start_date
,date_type
,qry_type
,county_cd
,sum(cnt_referrals) cnt_referrals
,sum(prior_order_cnt_households) prior_order_cnt_households
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior') nth_order
from CA_ODS.prtl.rate_referrals_order_specific
where county_cd = 0
and start_date > '2009-02-01'
group by
start_date
,date_type
,qry_type
,county_cd
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior')
order by
start_date, county_cd, nth_order ")
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households * 1000)
threeplus = spark(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
ggsave("spark-table2-row4.pdf", threeplus, width = 3, height = 1)
embedFonts("spark-table2-row4.pdf")
sparktable(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
osi = sqlQuery(con, "select
start_date
,date_type
,qry_type
,county_cd
,sum(cnt_referrals) cnt_referrals
,sum(prior_order_cnt_households) prior_order_cnt_households
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior') nth_order
from CA_ODS.prtl.rate_referrals_order_specific
where county_cd = 0
and start_date >= '2009-02-01'
group by
start_date
,date_type
,qry_type
,county_cd
,iif(nth_order <= 3, cast(nth_order as varchar(1)), 'More than 3 Prior')
order by
start_date, county_cd, nth_order ")
osi %<>% mutate(prior = factor(nth_order, labels = c("0", "1", "2", "3 or More")),
rate = cnt_referrals / prior_order_cnt_households * 1000)
threeplus = spark(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
threeplus
ggsave("spark-table2-row4.pdf", threeplus, width = 3, height = 1)
embedFonts("spark-table2-row4.pdf")
sparktable(osi[osi$nth_order == "More than 3 Prior", c("start_date", "rate")])
fortunes::fortune("logistic")
fortunes::fortune("logistic")
fortunes::fortune("logistic")
fortunes::fortune()
pdfs <- list.files(pattern = "Graph.*\\.pdf")
pdfs
lapply(pdfs, embedFonts)
day=c(1,2,3,4,5,6,1,2,3,4,5,6)
site=c('a', 'a', 'a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b')
value.1=c(1,2,5,7,5,3,9,4,2,8,1,8)
value.2=c(5,4,7,6,2,4,6,9,4,2,5,6)
data=data.frame(day,site,value.1,value.2)
data
library(tidyr)
spread(data, key = site, value = c("value.1", "value.2"))
library(reshape2)
dcast(data, site ~ value.1 + value.1)
dcast(data, day ~ value.1 + value.1)
dcast(data, day ~ site + value.1)
head(data)
data.long = melt(data, id = c("day", "site"))
head(data.long)
dcast(data.long, day ~ site + variable)
data.long = melt(data, id = c("day", "site"))
head(data.long)
dcast(data.long, day ~ site + variable)
head(mtcar)
head(mtcars)
select(mtcars, mpg:drat)
library(dplyr)
select(mtcars, mpg:drat)
select(mtcars, -mpg:drat)
select(mtcars, -(mpg:drat))
select(mtcars, -(mpg:drat), -carb)
library(ggplot2)
library(pocr)
dput(ref_lookup_county$county)
library(xtable)
x <- data.frame(matrix(1:6, nrow = 2))
xtable(x)
xtab = xtable(x)
xtab
class(xtab)
xtab = capture.output(print(xtable(x)))
xtab
str_replace_all(xtab, pattern = " +\\& +", "\t\\&\t")
cat(xtab)
cat(xtab, sep = "\n")
tab.xtab = str_replace_all(xtab, pattern = " +\\& +", "\t\\&\t")
cat(tab.xtab, sep = "\n")
paste(tab.xtab, collapse = "\n")
?text
df <- data.frame(ID = c(A, B, C, D, E), X = c(10, 20, 15, 0, 15), Y = c(10, 0, 10, 15, 0), Z = c(0, 10, 10, 10, 0)
)
df <- data.frame(ID = c("A", 'B', 'C', 'D', 'E'), X = c(10, 20, 15, 0, 15), Y = c(10, 0, 10, 15, 0), Z = c(0, 10, 10, 10, 0)
)
df %>% mutate(c1 = ifelse(X != 0 & Y != 0 & Z != 0, 0, X + Y),
c2 = X + Z,
c3 = Y + Z,
c4 = X + Y + Z)
library(dplyr)
df %>% mutate(c1 = ifelse(X != 0 & Y != 0 & Z != 0, 0, X + Y),
c2 = X + Z,
c3 = Y + Z,
c4 = X + Y + Z)
?stl
plot(stl(nottem, "per"))
plot(stl(nottem, s.window = 4, t.window = 50, t.jump = 1))
head(elecequip)
library(forecast)
install.packages("forecast")
plot(stl(nottem, s.window = 5, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 4, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 5, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 7, t.window = 50, t.jump = 1))
?nottem
?stl
?stl
plot(stl(nottem, s.window = 4, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 5, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 7, t.window = 50, t.jump = 1))
plot(stl(nottem, s.window = 4, t.window = 50, t.jump = 1))
?stl
c("Gm5852,Gm5773,Tdpoz4,Tdpoz3,Gm911", "Fcgr1,Terc,Gm5703")
gsub(",?Gm[^,]*,?", "", Genes)
xx = c("Gm5852,Gm5773,Tdpoz4,Tdpoz3,Gm911", "Fcgr1,Terc,Gm5703")
gsub(",?Gm[^,]*,?", "", xx)
gsub("Gm[^,]*", "", xx)
data = mtcars
data
x = names(data)[1]
data = data[order(data[x]), ]
data
data[x]
class(data[x])
class(data[[x]])
source('C:/Users/gregorp.NEBULA2/Desktop/GitHub/annual_report/spark helper.R')
library(ggplot2)
library(plotflow)
library(pocr)
library(dplyr)
library(mstate)
library(magrittr)
load("graph_dat.RData")
names(rate_care_day_movement_tx) <- make.names(names(rate_care_day_movement_tx))
rcdm = rate_care_day_movement_tx
rcdm %<>% mutate(type = factor(type, levels = c("Transition to Foster",
"Transition to Kin",
"Transition to Group")),
years_in_care = factor(paste("years", years_in_care)))
movement_tx <- rcdm %>% select(fiscal_yr, Movement.Rate) %>%
split(f = list(rcdm$years_in_care, rcdm$type))
names(movement_tx) = make.names(names(movement_tx))
rcdm %>% group_by(type, years_in_care) %>%
arrange(fiscal_yr) %>%
summarize(y2000 = first(Movement.Rate),
y2014 = last(Movement.Rate))
sparkdata <- c(list(
movement_tx,
)
)
movement_tx
getwd()
names(movement_tx)
move.nums = str_extract(names(movement_tx), pattern = "[0-9]")
move.nums
names(movement_tx) = str_replace(names(movement_tx), pattern = "^*Trans", replacement = "Trans")
names(movement_tx)
names(movement_tx) = str_replace(names(movement_tx), pattern = "^.*Trans", replacement = "Trans")
names(movement_tx)
names(movement_tx) = paste(names(movement_tx), move.nums, sep = ".")
names(move_plots)
move.plots <- lapply(movement_tx, FUN = spark)
names(move.plots)
move.plots[[1]]
for(i in seq_along(move.plots)) {
ggsave(filename = paste0("spark-", names(move.plots)[i], ".pdf"),
plot = move.plots[[i]], width = 3, height = 1)
}
pdfs <- list.files(pattern = ".*Transition.*\\.pdf")
pdfs
lapply(pdfs, embedFonts)
x = sample(letters, size = 50, replace = T)
duplicated(x)
?interp
library(dplyr)
?interp
install.packages("lazyeval")
install.packages("lazyeval")
library(lazyeval)
?interp
library(ggplot2)
library(plotflow)
library(pocr)
library(dplyr)
library(mstate)
library(magrittr)
load("graph_dat.RData")
head(sp_rate_referral_clean)
?stl
require(RODBC)
require(pocr)
require(sqldf)
con <- odbcConnect("Test Annie")
con <- odbcConnect("test_annie")
sp_rate_referral <- sqlQuery(con, "call sp_rate_referral('0','0','0')")
sp_rate_referral_clean <- cr_clean(sp_rate_referral)
get.rows <- sp_rate_referral_clean$date >= as.Date("2009-07-01") &
sp_rate_referral_clean$date <= as.Date("2014-07-01")
sp_rate_referral_clean <- sp_rate_referral_clean[get.rows, ]
ts1 <- ts(sp_rate_referral_clean$referral.rate, start=c(2009,2), frequency=12)
stl1 <- stl(ts1, "per")$time.series
sp_rate_referral_clean$type <- "Observed"
stl_dat <- sp_rate_referral_clean[,c("date", "cnt.referrals", "tot.pop", "referral.rate", "type")]
stl_dat$type <- "Deseasonalized Trend"
stl_dat$referral.rate <- stl1[,2]
sp_rate_referral_clean <- rbind(sp_rate_referral_clean, stl_dat)
sp_rate_referral_clean
source('~/Desktop/GitHub/annual_report/spark helper.R')
con <- odbcConnect("test_annie")
sp_reent <- sqlQuery(con, "SELECT * FROM test_annie.episode_reentries_av WHERE old_region_cd = 0;")
sp_reent
sp_reent <- sqlQuery(con, "SELECT
state_fiscal_yyyy
,per_reent
FROM test_annie.episode_reentries_av
WHERE old_region_cd = 0;")
sp_reent
library(ggplot2)
library(pocr)
# Spark helper functions
# Base version
# pdf(file = "test-spark-base.pdf", width = 2, height = 1)
# par(mar = c(0, 0, 0, 0))
# with(gen.ref, plot(date, referral.rate, type = "n", ann = F, axes = F))
# with(gen.ref, lines(date, referral.rate, col = portal_colors[8]))
# with(first_last(gen.ref), points(date, referral.rate, col = portal_colors[8], pch = 16))
# dev.off()
# ggplot version
# ggplot(gen.ref, aes(x = date, y= referral.rate)) +
#     geom_line(color = portal_colors[8]) +
#     theme_clean() +
#     geom_point(data = first_last(gen.ref), col = portal_colors[8])
# ggsave(filename = "test-spark-gg.pdf", width = 3, height = 1)
# Gives first and last rows of each data frame
first_last <- function(data) {
data[c(1, nrow(data)), ]
}
# Draws sparkline
# assumes first column is x, second is y
# other columns ignored
spark <- function(data) {
x = names(data)[1]
y = names(data)[2]
data = data[order(data[x]), ]
sparkline = ggplot(data, aes_string(x = x, y = y)) +
geom_line(color = portal_colors[8]) +
theme_clean() +
geom_point(data = first_last(data), col = portal_colors[8])
return(sparkline)
}
# Extracts values for spark table
sparktable <- function(data) {
x = names(data)[1]
y = names(data)[2]
data = arrange_(data, x)
data.frame(start.value = round(data[1, y], 1),
end.value = round(data[nrow(data), y], 1),
start.x = as.character(data[1, x]),
end.x = as.character(data[nrow(data), x]))
}
first_last(sp_reent)
spark(sp_reent)
sparktable(sp_reent)
library(ggplot2)
library(pocr)
sparktable(sp_reent)
?arrange_
library(ggplot2)
library(plotflow)
library(pocr)
library(dplyr)
library(mstate)
library(magrittr)
install.packages("plotflow")
sparktable(sp_reent)
first_last(sp_reent)
reent.spark <- spark(sp_reent)
reent.spark
firstlast(sp_reent)
first_last(sp_reent)
spark.first_last <- first_last(sp_reent)
reent.spark <- spark(sp_reent)
reent.sparktable <- sparktable(sp_reent)
?ggsave
ggsave("spark-reent.1year.pdf", reent.spark, width = 3, height = 1)
reent.spark
